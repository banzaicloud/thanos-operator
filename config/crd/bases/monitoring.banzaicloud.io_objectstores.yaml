
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: objectstores.monitoring.banzaicloud.io
spec:
  group: monitoring.banzaicloud.io
  names:
    kind: ObjectStore
    listKind: ObjectStoreList
    plural: objectstores
    singular: objectstore
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ObjectStore is the Schema for the objectstores API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ObjectStoreSpec defines the desired state of ObjectStore
          properties:
            bucketWeb:
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                httpAddress:
                  description: Listen host:port for HTTP endpoints.
                  type: string
                httpGracePeriod:
                  description: Time to wait after an interrupt received for HTTP Server.
                  type: string
                image:
                  properties:
                    pullPolicy:
                      description: PullPolicy describes a policy for if/when to pull
                        a container image
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                label:
                  description: Prometheus label to use as timeline title.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  type: object
                metrics:
                  description: Metrics defines the service monitor endpoints
                  properties:
                    interval:
                      type: string
                    path:
                      type: string
                    port:
                      format: int32
                      type: integer
                    prometheusAnnotations:
                      type: boolean
                    serviceMonitor:
                      type: boolean
                    timeout:
                      type: string
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                refresh:
                  description: Refresh interval to download metadata from remote storage.
                  type: string
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                timeout:
                  description: Timeout to download metadata from remote.
                  type: string
                tolerations:
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                web_external_prefix:
                  description: Static prefix for all HTML links and redirect URLs
                    in the bucket web UI interface. Actual endpoints are still served
                    on / or the web.route-prefix. This allows thanos bucket web UI
                    to be served behind a reverse proxy that strips a URL sub-path.
                  type: string
                web_prefix_header:
                  description: 'Name of HTTP request header used for dynamic prefixing
                    of UI links and redirects. This option is ignored if web.external-prefix
                    argument is set. Security risk: enable this option only if a reverse
                    proxy in front of thanos is resetting the header. The --web.prefix-header=X-Forwarded-Prefix
                    option can be useful, for example, if Thanos UI is served via
                    Traefik reverse proxy with PathPrefixStrip option enabled, which
                    sends the stripped prefix value in X-Forwarded-Prefix header.
                    This allows thanos UI to be served on a sub-path.'
                  type: string
              type: object
            compactor:
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                blockSyncConcurrency:
                  description: Number of goroutines to use when syncing block metadata
                    from object storage.
                  minimum: 1
                  type: integer
                compactConcurrency:
                  description: Number of goroutines to use when compacting groups.
                  minimum: 1
                  type: integer
                consistencyDelay:
                  description: Minimum age of fresh (non-compacted) blocks before
                    they are being processed. Malformed blocks older than the maximum
                    of consistency-delay and 48h0m0s will be removed.
                  type: string
                dataDir:
                  description: Data directory in which to cache blocks and process
                    compactions.
                  type: string
                dataVolume:
                  description: 'Kubernetes volume abstraction refers to different
                    types of volumes to be mounted to pods: emptyDir, hostPath, pvc.'
                  properties:
                    emptyDir:
                      description: Represents an empty directory for a pod. Empty
                        directory volumes support ownership management and SELinux
                        relabeling.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    hostPath:
                      description: Represents a host path mapped into a pod. Host
                        path volumes do not support ownership management or SELinux
                        relabeling.
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    pvc:
                      description: PersistentVolumeClaim defines the Spec and the
                        Source at the same time. The PVC will be created with the
                        configured spec and the name defined in the source.
                      properties:
                        source:
                          description: PersistentVolumeClaimVolumeSource references
                            the user's PVC in the same namespace. This volume finds
                            the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                            is, essentially, a wrapper around another type of volume
                            that is owned by someone else (the system).
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        spec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for
                            provider-specific attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  type: object
                downsamplingDisable:
                  description: Disables downsampling. This is not recommended as querying
                    long time ranges without non-downsampleddata is not efficient
                    and useful e.g it is not possible to render all samples for a
                    human eye anyway.
                  type: boolean
                httpAddress:
                  description: Listen host:port for HTTP endpoints.
                  type: string
                httpGracePeriod:
                  description: Time to wait after an interrupt received for HTTP Server.
                  type: string
                image:
                  properties:
                    pullPolicy:
                      description: PullPolicy describes a policy for if/when to pull
                        a container image
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  type: object
                metrics:
                  description: Metrics defines the service monitor endpoints
                  properties:
                    interval:
                      type: string
                    path:
                      type: string
                    port:
                      format: int32
                      type: integer
                    prometheusAnnotations:
                      type: boolean
                    serviceMonitor:
                      type: boolean
                    timeout:
                      type: string
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                retentionResolution1h:
                  description: How long to retain samples of resolution 2 (1 hour)
                    in bucket. 0d - disables this retention.
                  type: string
                retentionResolution5m:
                  description: How long to retain samples of resolution 1 (5 minutes)
                    in bucket. 0d - disables this retention.
                  type: string
                retentionResolutionRaw:
                  description: How long to retain raw samples in bucket. 0d - disables
                    this retention.
                  type: string
                tolerations:
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                wait:
                  description: Do not exit after all compactions have been processed
                    and wait for new work.
                  type: boolean
              type: object
            config:
              description: Config
              properties:
                mountFrom:
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          description: Secret key for the value
                          type: string
                        name:
                          description: Name of the kubernetes secret
                          type: string
                      required:
                      - key
                      - name
                      type: object
                  type: object
                value:
                  type: string
                valueFrom:
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          description: Secret key for the value
                          type: string
                        name:
                          description: Name of the kubernetes secret
                          type: string
                      required:
                      - key
                      - name
                      type: object
                  type: object
              type: object
          required:
          - config
          type: object
        status:
          description: ObjectStoreStatus defines the observed state of ObjectStore
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
